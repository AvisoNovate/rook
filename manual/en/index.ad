title: About Rook
---

== Sane, smart, fast, Clojure web services

%={:type :github :user "AvisoNovate" :repo "rook"}%

image:http://clojars.org/io.aviso/rook/latest-version.svg[Clojars Project, link="http://clojars.org/io.aviso/rook"]

image:https://drone.io/github.com/AvisoNovate/rook/status.png[Build Status, link="https://drone.io/github.com/AvisoNovate/rook"]

Rook is a library for building web services in Clojure. It is designed for use with
link:https://github.com/ring-clojure/ring[Ring].

Rook combines several features together:

* Conventions and metadata driven mappings of URIs to endpoint functions

* Fast and scalable request dispatch

* Request and response validation using link:https://github.com/Prismatic/schema[Prismatic Schema]

* Optional asynchronous processing pipeline based on https://github.com/clojure/core.async[Clojure core.async]

* Development-friendly environment

This philosophy of Rook is to allow to map URIs to namespaces, and have the functions inside those namespaces,
the endpoints, be concise, readable, and stateless.

Beyond that, the functions should be are pure as possible, relying entirely on values passed to it as arguments, rather than on any global state.  For example, a resource that exposes data from a database will have the database connection pool passed to it as an argument. Rook provides all the facilities needed to provide those link:arguments.html[argument values].